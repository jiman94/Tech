[Vagrant] 15분만에 윈도우에서 Ansible 테스트 환경 구축하기 (서버 1대 + 노드 5대)

[ vagrantfile ]

# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

# Ansible 테스트 서버
  config.vm.define:"ansible-server" do |cfg|
    cfg.vm.box= "centos/7"
    cfg.vm.provider:virtualbox do |vb|
      vb.name= "HoonJo-Ansible-Server"
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--memory", 2048]
    end
    cfg.vm.host_name="ansible-server"
    cfg.vm.synced_folder ".", "/vagrant", type: "virtualbox"
    cfg.vm.network "public_network", ip: "172.30.1.10"
    cfg.vm.network "forwarded_port", guest: 22, host: 30110, auto_correct: false, id: "ssh"
    cfg.vm.provision "shell",
      inline: "ip route replace default via 172.30.1.254 dev eth1"
    cfg.vm.provision "shell",
      path: "bootstrap.sh"
    cfg.vm.provision "file", source: "Ansible_env_ready.yml", destination: "Ansible_env_ready.yml"
    cfg.vm.provision "shell",
      inline: "ansible-playbook Ansible_env_ready.yml"
  end



# Ansible 테스트 노드 1번
  config.vm.define:"ansible-node01" do |cfg|
    cfg.vm.box= "ubuntu/trusty64"
    cfg.vm.provider:virtualbox do |vb|
      vb.name= "HoonJo-Ansible-Node01"
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--memory", 1024]
    end
    cfg.vm.host_name="ansible-node01"
    cfg.vm.synced_folder ".", "/vagrant", disabled: true
    cfg.vm.network "public_network", ip: "172.30.1.11"
    cfg.vm.network "forwarded_port", guest: 22, host: 30111, auto_correct: false, id: "ssh"
    cfg.vm.provision "shell",
      run: "always",
      inline: "route add default gw 172.30.1.254"
    cfg.vm.provision "shell",
      run: "always",
      inline: "eval `route -n | awk '{ if ($8 ==\"eth0\" && $2 != \"0.0.0.0\") print \"route del default gw \" $2; }'`"
  end



# Ansible 테스트 노드 2번
  config.vm.define:"ansible-node02" do |cfg|
    cfg.vm.box= "ubuntu/trusty64"
    cfg.vm.provider:virtualbox do |vb|
      vb.name= "HoonJo-Ansible-Node02"
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--memory", 1024]
    end
    cfg.vm.host_name="ansible-node02"
    cfg.vm.synced_folder ".", "/vagrant", disabled: true
    cfg.vm.network "public_network", ip: "172.30.1.12"
    cfg.vm.network "forwarded_port", guest: 22, host: 30112, auto_correct: false, id: "ssh"
    cfg.vm.provision "shell",
      run: "always",
      inline: "route add default gw 172.30.1.254"
    cfg.vm.provision "shell",
      run: "always",
      inline: "eval `route -n | awk '{ if ($8 ==\"eth0\" && $2 != \"0.0.0.0\") print \"route del default gw \" $2; }'`"
  end



# Ansible 테스트 노드 3번
  config.vm.define:"ansible-node03" do |cfg|
    cfg.vm.box= "ubuntu/trusty64"
    cfg.vm.provider:virtualbox do |vb|
      vb.name= "HoonJo-Ansible-Node03"
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--memory", 1024]
    end
    cfg.vm.host_name="ansible-node03"
    cfg.vm.synced_folder ".", "/vagrant", disabled: true
    cfg.vm.network "public_network", ip: "172.30.1.13"
    cfg.vm.network "forwarded_port", guest: 22, host: 30113, auto_correct: false, id: "ssh"
    cfg.vm.provision "shell",
      run: "always",
      inline: "route add default gw 172.30.1.254"
    cfg.vm.provision "shell",
      run: "always",
      inline: "eval `route -n | awk '{ if ($8 ==\"eth0\" && $2 != \"0.0.0.0\") print \"route del default gw \" $2; }'`"
  end



# Ansible 테스트 노드 4번
  config.vm.define:"ansible-node04" do |cfg|
    cfg.vm.box= "ubuntu/trusty64"
    cfg.vm.provider:virtualbox do |vb|
      vb.name= "HoonJo-Ansible-Node04"
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--memory", 1024]
    end
    cfg.vm.host_name="ansible-node04"
    cfg.vm.synced_folder ".", "/vagrant", disabled: true
    cfg.vm.network "public_network", ip: "172.30.1.14"
    cfg.vm.network "forwarded_port", guest: 22, host: 30114, auto_correct: false, id: "ssh"
    cfg.vm.provision "shell",
      run: "always",
      inline: "route add default gw 172.30.1.254"
    cfg.vm.provision "shell",
      run: "always",
      inline: "eval `route -n | awk '{ if ($8 ==\"eth0\" && $2 != \"0.0.0.0\") print \"route del default gw \" $2; }'`"
  end



# Ansible 테스트 노드 5번
  config.vm.define:"ansible-node05" do |cfg|
    cfg.vm.box= "ubuntu/trusty64"
    cfg.vm.provider:virtualbox do |vb|
      vb.name= "HoonJo-Ansible-Node05"
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--memory", 1024]
    end
    cfg.vm.host_name="ansible-node05"
    cfg.vm.synced_folder ".", "/vagrant", disabled: true
    cfg.vm.network "public_network", ip: "172.30.1.15"
    cfg.vm.network "forwarded_port", guest: 22, host: 30115, auto_correct: false, id: "ssh"
    cfg.vm.provision "shell",
      run: "always",
      inline: "route add default gw 172.30.1.254"
    cfg.vm.provision "shell",
      run: "always",
      inline: "eval `route -n | awk '{ if ($8 ==\"eth0\" && $2 != \"0.0.0.0\") print \"route del default gw \" $2; }'`"
  end

end





[ Bootstrap.sh ]
#!/usr/bin/env bash

yum install epel-release -y
yum install ansible -y

#hosts file
echo "172.30.1.11 node01" >> /etc/hosts
echo "172.30.1.12 node02" >> /etc/hosts
echo "172.30.1.13 node03" >> /etc/hosts
echo "172.30.1.14 node04" >> /etc/hosts
echo "172.30.1.15 node05" >> /etc/hosts


#ansible hosts file
echo "[Nodes]" >> /etc/ansible/hosts
echo "node01" >> /etc/ansible/hosts
echo "node02" >> /etc/ansible/hosts
echo "node03" >> /etc/ansible/hosts
echo "node04" >> /etc/ansible/hosts
echo "node05" >> /etc/ansible/hosts

#환경설정 초기 파일 구성 for vagrant ONLY
mkdir /home/vagrant/.vim
touch /home/vagrant/.vimrc
touch /home/vagrant/.bashrc

[ Ansible_env_ready.yml ]
---
- name: Ansible_vim
  hosts: localhost
  remote_user: vagrant
  gather_facts: no

  tasks:
    - name: Install vim-enhanced 
      yum: 
        name: vim-enhanced
        state: present
    - name: Download ansible-vim
      shell: "curl -fLo /home/vagrant/.vim/autoload/plug.vim --create-dirs \
              https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
    - name: configure vimrc 
      lineinfile:
        dest: /home/vagrant/.vimrc
        line: "{{ item }}"
      with_items:
        - "set autoindent" 
        - "set cindent" 
        - "set number"
        - "set smartcase"
        - "set smarttab"
        - "call plug#begin('~/.vim/plugged')" 
        - "Plug 'pearofducks/ansible-vim'"
        - "call plug#end()"
    - name: configure bashrc
      lineinfile:
        dest: /home/vagrant/.bashrc
        line: "{{ item }}"
      with_items:
        - "alias vi='vim'" 
        - "alias ans='ansible'"
        - "alias anp='ansible-playbook'"
    - name: install vim-Plugin
      shell: "vim -E -c 'PlugInstall' -c 'source /home/vagrant/.vimrc' -c 'qa' || true" 
      ignore_errors: yes
    - name: Change .vim permission
      shell: chown -R vagrant:vagrant /home/vagrant/.vim  
    - name: bash reload
      shell: "source /home/vagrant/.bashrc"
